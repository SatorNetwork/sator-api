// Code generated by sqlc. DO NOT EDIT.
// source: users.sql

package main

import (
	"context"
)

const getUsersWithoutWallet = `-- name: GetUsersWithoutWallet :many
SELECT
	id, username, email, password, disabled, verified_at, updated_at, created_at
FROM
	users
WHERE
	id NOT IN( SELECT DISTINCT
			user_id FROM wallets
		WHERE
			solana_account_id != '00000000-0000-0000-0000-000000000000'
			AND wallet_type = 'sao')
	AND verified_at IS NOT NULL
`

func (q *Queries) GetUsersWithoutWallet(ctx context.Context) ([]User, error) {
	rows, err := q.query(ctx, q.getUsersWithoutWalletStmt, getUsersWithoutWallet)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []User
	for rows.Next() {
		var i User
		if err := rows.Scan(
			&i.ID,
			&i.Username,
			&i.Email,
			&i.Password,
			&i.Disabled,
			&i.VerifiedAt,
			&i.UpdatedAt,
			&i.CreatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
