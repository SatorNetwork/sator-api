// Code generated by sqlc. DO NOT EDIT.
// source: nft_cache.sql

package repository

import (
	"context"
)

const addNFTToCache = `-- name: AddNFTToCache :exec
INSERT INTO nft_cache (mint_addr, metadata) 
VALUES ($1, $2)
`

type AddNFTToCacheParams struct {
	MintAddr string `json:"mint_addr"`
	Metadata []byte `json:"metadata"`
}

func (q *Queries) AddNFTToCache(ctx context.Context, arg AddNFTToCacheParams) error {
	_, err := q.exec(ctx, q.addNFTToCacheStmt, addNFTToCache, arg.MintAddr, arg.Metadata)
	return err
}

const getNFTFromCache = `-- name: GetNFTFromCache :one
SELECT mint_addr, metadata FROM nft_cache
WHERE mint_addr = $1
`

func (q *Queries) GetNFTFromCache(ctx context.Context, mintAddr string) (NftCache, error) {
	row := q.queryRow(ctx, q.getNFTFromCacheStmt, getNFTFromCache, mintAddr)
	var i NftCache
	err := row.Scan(&i.MintAddr, &i.Metadata)
	return i, err
}
