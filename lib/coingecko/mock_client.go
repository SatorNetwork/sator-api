// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/SatorNetwork/nft-marketplace-api/lib/coingecko (interfaces: Interface)

// Package coingecko is a generated GoMock package.
package coingecko

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	types "github.com/superoo7/go-gecko/v3/types"
)

// MockInterface is a mock of Interface interface.
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface.
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance.
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// SimplePrice mocks base method.
func (m *MockInterface) SimplePrice(arg0, arg1 []string) (*map[string]map[string]float32, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SimplePrice", arg0, arg1)
	ret0, _ := ret[0].(*map[string]map[string]float32)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SimplePrice indicates an expected call of SimplePrice.
func (mr *MockInterfaceMockRecorder) SimplePrice(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SimplePrice", reflect.TypeOf((*MockInterface)(nil).SimplePrice), arg0, arg1)
}

// SimpleSinglePrice mocks base method.
func (m *MockInterface) SimpleSinglePrice(arg0, arg1 string) (*types.SimpleSinglePrice, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SimpleSinglePrice", arg0, arg1)
	ret0, _ := ret[0].(*types.SimpleSinglePrice)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SimpleSinglePrice indicates an expected call of SimpleSinglePrice.
func (mr *MockInterfaceMockRecorder) SimpleSinglePrice(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SimpleSinglePrice", reflect.TypeOf((*MockInterface)(nil).SimpleSinglePrice), arg0, arg1)
}
