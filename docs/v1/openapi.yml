openapi: "3.0.2"
info:
  title: Sator API
  version: "0.0.1"
servers:
  - url: http://localhost:8080/
    description: Local server
  - url: https://sator-api-n7vrw.ondigitalocean.app/
    description: Development server
paths:
  /:
    get:
      tags:
        - "Common"
      summary: Get current build tag
      responses:
        "200":
          description: Returns current build tag, which contains build date and commit hash.
          content:
            application/json:
              schema:
                type: object
                properties:
                  build_tag:
                    type: string
                    example: "20210514.062552-e5cad484406f996a4da8674f8fbc9ef6e1b925d5"
  /health:
    get:
      tags:
        - "Common"
      summary: Health check
      responses:
        "204":
          description: Get current API running status.

  /auth/login:
    post:
      tags:
        - "Auth"
      summary: Log in
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "john.doe@mail.dev"
                password:
                  type: string
                  example: "qwerty12345"
      responses:
        "200":
          description: Returns JWT token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
        "400":
          description: Bad request. The same for any code, except 422 - Unprocessable Entity.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "something went wrong"
        "422":
          description: Unprocessable Entity. It user for validation errors.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      email:
                        type: array
                        items:
                          type: string
                          example: "Field email must be a valid email address"
                      password:
                        type: array
                        items:
                          type: string
                          example: "Field password must contain at least 8 chars"

  /auth/signup:
    post:
      tags:
        - "Auth"
      summary: Sign up
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "john.doe@mail.dev"
                username:
                  type: string
                  example: "johndoe"
                password:
                  type: string
                  example: "qwerty12345"
      responses:
        "201":
          description: Returns only HTTP status 201 with empty body.
        "400":
          description: Bad request. The same for any code, except 422 - Unprocessable Entity.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "something went wrong"
        "422":
          description: Unprocessable Entity. It user for validation errors.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      email:
                        type: array
                        items:
                          type: string
                          example: "Field email must be a valid email address"
                      username:
                        type: array
                        items:
                          type: string
                          example: "Field username cannot be empty"
                      password:
                        type: array
                        items:
                          type: string
                          example: "Field password must contain at least 8 chars"

  /profile:
    get:
      tags:
        - "Profile"
      summary: Get user profile data
      responses:
        "200":
          description: Returns user profile data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "f4f78cac-5db6-4ecc-ad13-5877705f3126"
                  first_name:
                    type: string
                    example: "John"
                  last_name:
                    type: string
                    example: "Doe"
        "401":
          description: Not authorized. User should be redirected to login page.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Not authorized"
